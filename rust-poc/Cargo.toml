[package]
name = "emon32-rust-poc"
version = "0.1.0"
edition = "2021"

[build-dependencies]
cc = "1.0"
which = "4.4"

[dependencies]
# Core embedded dependencies
cortex-m = { version = "0.7", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7"
embedded-hal = "1.0"
nb = "1.0"

# RTIC for real-time concurrency
rtic = { version = "2.2", features = ["thumbv6-backend"] }

# SAMD21 specific dependencies  
atsamd-hal = { version = "0.22", features = ["samd21j"] }
atsamd21j = { version = "0.14", features = ["rt"] }

# Math and data structures for no_std
micromath = { version = "2.1", default-features = false }
heapless = "0.9"

# LTO-optimized qfplib integration
qfplib-sys = { path = "qfplib-sys", features = ["arm-cortex-m0plus"], optional = true }

# Optional: for RTT debugging (alternative to UART)
rtt-target = { version = "0.6", optional = true }

# Optional: for panic handling on embedded targets only
[target.'cfg(target_arch = "arm")'.dependencies]
portable-atomic = { version = "1.0", features = ["unsafe-assume-single-core"] }
panic-halt = "1.0"

[target.'cfg(not(target_arch = "arm"))'.dependencies]  
portable-atomic = "1.0"

[features]
default = []
qfplib = ["qfplib-sys", "qfplib-sys/arm-cortex-m0plus"]  # Enable LTO-optimized qfplib integration for ARM targets  
rtt = ["rtt-target"]

[[bin]]
name = "emon32-poc"
path = "src/main.rs"

[[bin]]
name = "emon32-uart"
path = "src/main_uart.rs"

[[bin]]
name = "emon32-rtic"
path = "src/main_rtic.rs"

[[bin]]
name = "emon32-rtic-uart"
path = "src/main_rtic_uart.rs"

[[bin]]
name = "emon32-uart-hardware"
path = "src/main_uart_hardware.rs"

[[bin]]
name = "emon32-rtic-uart-hardware"
path = "src/main_rtic_uart_hardware.rs"

# Debug versions with oscilloscope support
[[bin]]
name = "emon32-debug"
path = "src/main_debug.rs"

[[bin]]
name = "emon32-rtic-debug"
path = "src/main_rtic_debug.rs"

# Performance testing binary for ARM hardware
[[bin]]
name = "emon32-performance"
path = "src/main_performance_test_simple.rs"
required-features = ["rtt"]

# qfplib performance comparison binary (ARM only)
[[bin]]
name = "emon32-qfplib-performance"
path = "src/main_qfplib_performance.rs"
required-features = ["rtt", "qfplib"]

# Simple qfplib correctness test
[[bin]]
name = "emon32-qfplib-test"
path = "src/main_qfplib_simple_test.rs"
required-features = ["rtt", "qfplib"]

# qfplib debug test to verify integration
[[bin]]
name = "emon32-qfplib-debug"
path = "src/main_qfplib_debug.rs"
required-features = ["rtt", "qfplib"]

# qfplib complex math performance test
[[bin]]
name = "emon32-qfplib-complex"
path = "src/main_qfplib_complex_performance.rs"
required-features = ["rtt", "qfplib"]

# Hybrid FastMath performance test (best of both worlds)
[[bin]]
name = "emon32-hybrid-performance"
path = "src/main_hybrid_performance.rs"
required-features = ["rtt", "qfplib"]

[lib]
name = "emon32_rust_poc"
path = "src/lib.rs"

[profile.dev]
debug = true
lto = false

[profile.release]
debug = true
lto = "fat"        # Aggressive cross-crate LTO
opt-level = "s"    # Optimize for size  
codegen-units = 1  # Better optimization with single codegen unit
panic = "abort"    # Reduce binary size
overflow-checks = false  # Disable overflow checks for performance

# Maximum performance profile for LTO testing
[profile.lto-max]
inherits = "release"
lto = "fat"
opt-level = 3      # Maximum optimization
codegen-units = 1
panic = "abort"
overflow-checks = false
debug-assertions = false